events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
    # Add other event-related directives as needed
}

http {
    # Define a server for odoo backend (port 8069, as configured on the odoo.conf file (odoo file) )
    upstream odoo-backend {
        server 127.0.0.1:8069;
    }

    # Define a server for longpolling (port 8072, as configured on the odoo.conf file (odoo file) )
    upstream odoo-lp{
    server 127.0.0.1:8072;
    }

    server {
        listen 443 ssl;
        server_name www.tisol.com.au;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/odoo_erp_nonprod.crt;
        ssl_certificate_key /etc/nginx/ssl/odoo_erp_nonprod.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Log files
        access_log /var/log/nginx/odoo-access.log;
        error_log /var/log/nginx/odoo-error.log;

        # Increase proxy buffer size
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
        # Force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        # Enable data compression
        gzip on;
        gzip_min_length 1100;
        gzip_buffers 4 32k;
        gzip_types text/plain text/xml text/css text/less application/x-javascript application/xml application/json application/javascript image/svg+xml;
        gzip_vary on;

        # Proxy header and settings
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy no-referrer-when-downgrade;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Proxy timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
        
        # Cache static data
        location ~* /web/static/ {
            proxy_cache_valid 200 60m;
            proxy_buffering on;
            expires 864000;
            proxy_pass http://odoo-backend;
        }

        location / {
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                return 204;  # No content response for OPTIONS requests
            }
            proxy_pass http://odoo-backend;
            proxy_redirect off;
        }

        location /longpolling {
                proxy_pass http://odoo-lp;
        }

        location /info {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }
    }

    server {
        listen 80;
        server_name localhost;

        location /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }
    }
}
